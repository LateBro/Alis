# -*- coding: utf-8 -*-
#Coded by Coder Productions
#–°—é–¥–∞ –Ω–µ–ª—å–∑—è –ª–∞–∑–∏—Ç—å!
import os
import random
from subprocess import check_output
from os.path import abspath
import subprocess
from turtle import width
a = 0
import time
import sys
from sys import platform
def clear():
    os.system('cls || clear')
def pip():
    print('Program: –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤, –¥–ª—è —Ä–æ–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã\n–í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–¥–ª–∏—Ç—Å—è 3-5 –º–∏–Ω—É—Ç')
    time.sleep(3)
    if platform == "linux" or platform == "linux2":
        print('Linux os: –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å')
        sys.exit(1)
    elif platform == "darwin":
        input('Mac os: –î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–∞–µ—Ç—Å—è –≤–∞—à–µ–π –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è: ')
        sys.exit(1)
    elif platform == "win32":
        os.system('pip install pipwin --quiet --disable-pip-version-check')
        os.system('pipwin install pyaudio --quiet --disable-pip-version-check')
        os.system('pipwin install pyttsx3 --quiet --disable-pip-version-check')
    os.system('pip install vosk --quiet --disable-pip-version-check')
    os.system('pip install SpeechRecognition --quiet --disable-pip-version-check')
    os.system('pip install youtube_dl --quiet --disable-pip-version-check')
    os.system('pip install pyttsx3 --quiet --disable-pip-version-check')
    os.system('pip install pyaudio --quiet --disable-pip-version-check')
    os.system('pip install Wave --quiet --disable-pip-version-check')
    os.system('pip install pytube --quiet --disable-pip-version-check')
    os.system('pip install json --quiet --disable-pip-version-check')
    os.system('pip install requests --quiet --disable-pip-version-check')
    os.system('pip install bs4 --quiet --disable-pip-version-check')
    os.system('pip install google --quiet --disable-pip-version-check')
    os.system('pip3 install Plyer --quiet --disable-pip-version-check')
    os.system('pip install colorama --quiet --disable-pip-version-check')
    os.system('pip install pyqt5 --quiet --disable-pip-version-check')
    os.system('pip install PyQtWebEngine --quiet --disable-pip-version-check')
    
    os.system('pip install pyperclip --quiet --disable-pip-version-check')
    os.system('pip install pyfiglet --quiet --disable-pip-version-check') 
    os.system('winget install --id Git.Git -e --source winget --quiet --disable-pip-version-check')
    
    print('Program: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É')
    input('Input : ')
    time.sleep(1)
    sys.exit(1)
while 1:
    try:
        from PyQt5.QtCore import *
        from PyQt5.QtWidgets import *
        from PyQt5.QtWebEngineWidgets import *
        from colorama import Fore
        from colorama import init
        from pyfiglet import Figlet
        import folium
        import pyperclip
        from colorama import *
        import plyer
        import youtube_dl
        from pytube import YouTube
        import webbrowser
        from vosk import Model, KaldiRecognizer #pip install vosk
        import speech_recognition  #pip install SpeechRecognition
        import pyttsx3  #pip install pyttsx3
        import wave  #pip install Wave
        import json #pip install json
        import requests #pip install requests
        from bs4 import BeautifulSoup #pip install bs4
        parametr = 1
        break
    except ImportError:
        pip()
def checkfile(file):
    try:
        with open(file, 'r', encoding='utf-8') as check:
            check.read()
            check.close
        return True
    except:
        return False

def chck_path(path):
    try:
        os.stat(path)
    except OSError:
        return False
    return True

    
class VoiceAssistant:
    name = ""
    sex = ""
    speech_language = "ru"
    recognition_language = ""
    


def update(x):
    url = f"https://sites.google.com/view/coderprogrammers/codechecker"
    req = requests.get(url)
    soup = BeautifulSoup(req.text, "html.parser")
    vs = '#–ø–µ—Ä–µ–Ω–æ—Å'
    version_ACTUA = soup.find("div", class_="tyJCtd mGzaTb Depvyb baZpAe").text.replace(f'\\n{vs}','\n')
    
    from os.path import sep
    g = __file__.split(sep)[-1]
    with open (g, 'w',  encoding='utf-8') as f:
        f.write(version_ACTUA)
        print('Program: –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—É–ø–∏–ª–æ –≤ —Å–∏–ª—É –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É')
def start(versionactivity, x, admin_preset, empty):
    def animation(x):
        animation = "|/-\\"
        for i in range(x):
            time.sleep(0.1)
            sys.stdout.write("\r" + animation[i % len(animation)])
            sys.stdout.flush()
    def checkadmin():
        if admin_preset == 1:
            print(f'[{Fore.YELLOW} ‚öù {Fore.WHITE} ] Alis started in development mode [{Fore.YELLOW} ‚öù {Fore.WHITE} ] ')
    def checkversion(x):
        version ='Version - 7.0.0'
        url = f"https://sites.google.com/view/coderprogrammers/alis_version_checher"
        req = requests.get(url)
        soup = BeautifulSoup(req.text, "html.parser")
        version_ACTUALITY = soup.find("div", class_="jXK9ad-SmKAyb").text
        if version != version_ACTUALITY and x == 1:
            print('–í–µ—Ä—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞')
            url = f"https://sites.google.com/view/coderprogrammers/codechecker"
            req = requests.get(url)
            soup = BeautifulSoup(req.text, "html.parser")
            vs = '#–ø–µ—Ä–µ–Ω–æ—Å'
            version_ACTUA = soup.find("div", class_="tyJCtd mGzaTb Depvyb baZpAe").text.replace(f'\\n{vs}','\n')
            play_voise('–¢–∞–∫ –∫–∞–∫ –≤–∞—à–∞ –≤–µ—Ä—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞, —è –æ–±–Ω–æ–≤–ª—é –µ—ë', '–¢–∞–∫ –∫–∞–∫ –≤–∞—à–∞ –≤–µ—Ä—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞, —è –æ–±–Ω–æ–≤–ª—é –µ—ë')
            from os.path import sep
            g = __file__.split(sep)[-1]
            with open (g, 'w',  encoding='utf-8') as f:
                f.write(version_ACTUA)
                print('Program: –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å—Ç—É–ø–∏–ª–æ –≤ —Å–∏–ª—É –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É')
        elif x != 1:
            print('Program: –ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ')
    def setup_assistant_voice():
        voices = ttsEngine.getProperty("voices")
        if assistant.speech_language == "en":
            assistant.recognition_language = "en-US"
            if assistant.sex == "man":
                ttsEngine.setProperty("voice", voices[1].id)
            else:
                ttsEngine.setProperty("voice", voices[2].id)
        else:
            assistant.recognition_language = "ru-RU"
            ttsEngine.setProperty("voice", voices[0].id)
    def play_voise(text_to_speech, text_to_print = 'Null'):
        ttsEngine.say(text_to_speech)
        ttsEngine.runAndWait()
        print(f'Alis: {text_to_print}\n\n')

    def xC_3():
        return "ty$ #t d / m Gza Tb / De pv yb/ ba üé∏p A 7"
    def record_audio(*args: tuple):
        with microphone:
            recorded_data = ""
            recognizer.adjust_for_ambient_noise(microphone, duration=2)
            try:
                print("Program: –ì–æ–≤–æ—Ä–∏—Ç–µ")
                audio = recognizer.listen(microphone, 5, 5)
                with open("microphone-results.wav", "wb") as file:
                    file.write(audio.get_wav_data())
            except speech_recognition.WaitTimeoutError:
                play_voise('–û–π –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', '–û–π –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
                return
            try:
                print("Program: –°—Ç–æ–ø. –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ")
                recorded_data = recognizer.recognize_google(audio, language="ru").lower()
            except speech_recognition.UnknownValueError:
                pass
            except speech_recognition.RequestError:
                print("Program: –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ñ–ª–∞–π–Ω-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ... –î–ª—è —ç—Ç–æ–≥–æ —Å–∫–∞—á–∞–π—Ç–µ vosk - model - ru. –ò –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –µ—ë –≤ –ø–∞–ø–∫—É —Å Alis")
                recorded_data = use_offline_recognition()
            return recorded_data
        os.remove("microphone-results.wav")
    def record_audio2(*args: tuple):
        """
        –ó–∞–ø–∏—Å—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ
        """
        with microphone:
            recorded_data = ""
            recognizer.adjust_for_ambient_noise(microphone, duration=2)
            try:
                print("Program: –ì–æ–≤–æ—Ä–∏—Ç–µ...")
                audio = recognizer.listen(microphone, 5, 5)
                with open("microphone-find.wav", "wb") as file:
                    file.write(audio.get_wav_data())
            except speech_recognition.WaitTimeoutError:
                print("Program: Error")
                return
            try:
                print("Program: –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ")
                recorded_data2 = recognizer.recognize_google(audio, language="ru").lower()
            except speech_recognition.UnknownValueError:
                pass
            except speech_recognition.RequestError:
                print("Program: –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ñ–ª–∞–π–Ω-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ...")
                recorded_data2 = use_offline_recognition()
            return recorded_data2

    def record_audio3(*args: tuple):
        """
        –ó–∞–ø–∏—Å—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ
        """
        with microphone:
            recorded_data = ""
            recognizer.adjust_for_ambient_noise(microphone, duration=2)
            try:
                print("–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...")
                audio = recognizer.listen(microphone, 5, 5)
                with open("microphone-find.wav", "wb") as file:
                    file.write(audio.get_wav_data())
            except speech_recognition.WaitTimeoutError:
                print("Program: Error")
                return
            try:
                print(f"–ó–∞–ø–∏—Å—ã–≤–∞—é —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª ")
                recorded_data3 = recognizer.recognize_google(audio, language="ru").lower()
            except speech_recognition.UnknownValueError:
                pass
            except speech_recognition.RequestError:
                print("Program: –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ñ–ª–∞–π–Ω-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ...")
                recorded_data3 = use_offline_recognition()
            return recorded_data3
    def use_offline_recognition():
        recorded_data = ""
        try:
            if not os.path.exists("models/vosk-model-small-ru-0.4"):
                print("Program: –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–∏–Ω–∏ –≤–µ—Ä—Å–∏–∏ --+ https://alphacephei.com/vosk/models/vosk-model-ru-0.22.zip")
                exit(1)
            if input('Program: –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ? [Y/n] -- ') == 'y':
                print('Program: –î–ª—è –Ω–∞—á–∞–ª–∞ —Å—Ç–æ–∏—Ç —Å–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª—å vosk –ø–æ —Å—Å—ã–ª–∫–µ\n–î–∞–ª–µ–µ —Å—Ç–æ–∏—Ç —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –ø–∞–ø–∫—É –≤–Ω—É—Ç—Ä–∏\n–ü–µ—Ä–µ–º–µ—Ç–∏—Ç—å –µ—ë –≤ –æ–¥–Ω—É –ø–∞–ø–∫—É —Å Alis\n–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –µ—ë –≤ vosk_main-ru')
            wave_audio_file = wave.open("microphone-results.wav", "rb")
            model = Model("vosk_main-ru")
            offline_recognizer = KaldiRecognizer(model, wave_audio_file.getframerate())
            data = wave_audio_file.readframes(wave_audio_file.getnframes())
            if len(data) > 0 and offline_recognizer.AcceptWaveform(data):
                recorded_data = offline_recognizer.Result()
                recorded_data = json.loads(recorded_data)
                recorded_data = recorded_data["text"]
        except Exception:
            print("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–æ–¥–µ–ª—å Vosk –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return recorded_data
    if __name__ == "__main__":
        recognizer = speech_recognition.Recognizer()
        microphone = speech_recognition.Microphone()
        ttsEngine = pyttsx3.init()
        assistant = VoiceAssistant()
        asault_ = xC_3()
        assistant.name = "Alis"
        assistant.sex = "man"
        assistant.speech_language = "ru"
        setup_assistant_voice()
        checkadmin()
        checkversion(x)
        while versionactivity == 1:
            voice_input = record_audio()
            voice_input = voice_input.replace('—ç–ª–∏—Å', 'Alis')
            print(f'–í—ã: {voice_input}')
            voice_input = voice_input.split(" ")
            command = ' '.join(voice_input)
            find1 = command
            homeDir = os.path.expanduser("~/Onedrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/")
            h = os.listdir(homeDir)
            find = homeDir + find1


            if f'{find1.title()}.lnk' in h:
                play_voise('–ó–∞–ø—É—Å–∫–∞—é', '–ó–∞–ø—É—Å–∫–∞—é')
                os.system( 'start cmd "' + find + '.lnk"')



            elif f'{find1.title()}.url' in h:
                play_voise('–ó–∞–ø—É—Å–∫–∞—é', '–ó–∞–ø—É—Å–∫–∞—é')
                os.system('start cmd "' + find + '.url"')



            elif f'{find1.title()}.exe' in h:
                play_voise('–ó–∞–ø—É—Å–∫–∞—é', '–ó–∞–ø—É—Å–∫–∞—é')
                os.system('start cmd "' + '"' + find + '.exe"')



            else:
                if '–ø—Ä–∏–≤–µ—Ç' == command:
                    play_voise('–ü—Ä–∏–≤–µ—Ç, —è Alis', '–ü—Ä–∏–≤–µ—Ç, —è Alis')


                elif 'telegram' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é —Ç–µ–ª–µ–≥—Ä–∞–º', '–û—Ç–∫—Ä—ã–≤–∞—é Telegram')
                    
                    webbrowser.open('https://web.telegram.org')


                elif 'google' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –≥—É–≥–ª', '–û—Ç–∫—Ä—ã–≤–∞—é Google')
                    
                    webbrowser.open('https://www.google.com')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ :)')
                elif '—Å–∞–π—Ç' == command:
                    
                    
                    webbrowser.open('https://sites.google.com/view/alisvoise/alis?authuser=0')
                    

                elif '–º—É–∑—ã–∫–∞' == command or 'spotify' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –°–ø–æ—Ç–∏—Ñ–∞–π', '–û—Ç–∫—Ä—ã–≤–∞—é spotify')
                    
                    webbrowser.open('https://open.spotify.com')


                elif '–ø–æ–≥–æ–¥–∞' == command or '–æ—Ç–∫—Ä–æ–π–ø–æ–≥–æ–¥—É' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –ø–æ–≥–æ–¥—É', '–û—Ç–∫—Ä—ã–≤–∞—é –ø–æ–≥–æ–¥—É.')
                    
                    webbrowser.open('https://weather.com/weather/today')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ :)')



                elif 'youtube' == command or '–æ—Ç–∫—Ä–æ–πyoutube' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é —é—Ç—É–±', '–û—Ç–∫—Ä—ã–≤–∞—é YouTube O.O')
                    
                    webbrowser.open('https://www.youtube.com')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')



                elif 'google trnslator' == command or 'google –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –≥—É–≥–ª –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫', '–û—Ç–∫—Ä—ã–≤–∞—é Google-–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ Âéª')
                    
                    webbrowser.open('https://translate.google.com')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ :)')



                elif 'taskmanager' == command or '–¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á', '–û—Ç–∫—Ä—ã–≤–∞—é –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á :O')
                    os.system('taskmgr')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')



                elif 'calculator' == command or '–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', '–û—Ç–∫—Ä—ã–≤–∞—é Calculator')
                    os.system('calc')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ :|')



                elif 'notepad' == command or '–±–ª–æ–∫–Ω–æ—Ç' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –±–ª–æ–∫–Ω–æ—Ç', '–û—Ç–∫—Ä—ã–≤–∞—é –ë–ª–æ–∫–Ω–æ—Ç :3')
                    os.system('notepad')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')



                elif 'explorer' == command or '–ø—Ä–æ–≤–æ–¥–Ω–∏–∫' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –ø—Ä–æ–≤–æ–¥–Ω–∏–∫', '–û—Ç–∫—Ä—ã–≤–∞—é Exploarer')
                    os.system('explorer')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')



                elif '–¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É' == command or 'add command' == command:
                    cfgcommand = input('–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n [ <voise command> ]')
                    play_voise(f'–î–ª—è —Ç–æ–≥–æ —á—Ç–æ-–±—ã –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–∫–∞–∂–∏—Ç–µ, {cfgcommand}', f'–î–ª—è —Ç–æ–≥–æ —á—Ç–æ-–±—ã –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–∫–∞–∂–∏—Ç–µ, {cfgcommand}')
                    cfg_voise = input('–ß—Ç–æ –º–Ω–µ –≥–æ–≤–æ—Ä–∏—Ç—å?\n —á—Ç–æ–±—ã —è –ø—Ä–æ–º–æ–ª—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ 0\n [ <voise> ]')
                    if cfg_voise != '0':
                        play_voise(f'–Ø –æ—Ç–≤–µ—á—É {cfg_voise}', f'–Ø –æ—Ç–≤–µ—á—É {cfg_voise}')
                    elif cfg_voise == "0":
                        play_voise(f'–Ø –±—É–¥—É –º–æ–ª—á–∞—Ç—å', f'–Ø –±—É–¥—É –º–æ–ª—á–∞—Ç—å :(')
                    clear()
                    f = input('–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ [ </...> ]')

                    enter = '\n'
                    tab = '\n   '
                    tab2 = '                '
                    tab3 = '\r                '
                    s = "'"
                    m_check = 0
                    if f == '–æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç' or f == '—Å–∞–π—Ç' or f == 'site':
                        m_check = 1
                        if cfg_voise == "0":
                            clear()
                            opensite_cfg = input('–í–∞—à —Å–∞–π—Ç')
                            command_cfg = f'{tab2}elif {s}{cfgcommand}{s} == command:{tab}{tab2}{tab}{tab2}webbrowser.open("{opensite_cfg}"){tab3}else:# -- Config --'
                        else:
                            clear()
                            opensite_cfg = input('–í–∞—à —Å–∞–π—Ç')
                            command_cfg = f'{tab2}elif {s}{cfgcommand}{s} == command:{tab}{tab2}play_voise({s}{cfg_voise}{s}){tab}{tab2}{tab}{tab2}webbrowser.open("{opensite_cfg}"){tab3}else:# -- Config --'
                       
                    

                    elif f == 'exe' or f == '–æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É' or f == '–∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã' or f == '–∑–∞–ø—É—Å–∫ exe' or f == 'lnk':
                        m_check = 1
                        if cfg_voise == "0":
                            openprogramm_cfg = input('–ü—É—Ç—å –∫ exe –∏–ª–∏ lnk —Ñ–∞–π–ª—É')
                            command_cfg = f'{tab2}elif {s}{cfgcommand}{s} == command:{tab}{tab2}import os{tab}{tab2}os.system("{openprogramm_cfg}"){tab3}else:# -- Config --'
                        else:
                            openprogramm_cfg = input('–ü—É—Ç—å –∫ exe –∏–ª–∏ lnk —Ñ–∞–π–ª—É')
                            command_cfg = f'{tab2}elif {s}{cfgcommand}{s} == command:{tab}{tab2}play_voise({s}{cfg_voise}{s}){tab}{tab2}import os{tab}{tab2}os.system("{openprogramm_cfg}"){tab3}else:# -- Config --'
                        

                    elif f == 'python' or f == '.py' or f == 'start python' or f == '–∑–∞–ø—É—Å–∫ python' or f == 'py':
                        m_check = 1
                        if cfg_voise == "0":
                            str = "\ "
                            clear()
                            check_w = input('–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞? [Y/n]')
                            if check_w == 'y' or check_w == 'Y'  or check_w == 'Yes'   or check_w == 'yes' :
                                config_window_console = 'w'
                            else:
                                config_window_console = ''
                            openprogramm_cfg = input(f'–ü—É—Ç—å –∫ .py —Ñ–∞–π–ª—É\n (–ï—Å–ª–∏ –æ–Ω –≤ 1 –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å Alis –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫ –ø—Ä–∏–º–µ—Ä—É main.py)\n [{str}Path]')
                            command_cfg = f'{tab2}elif {s}{cfgcommand}{s} == command:{tab}{tab2}os.system("start python{config_window_console} {openprogramm_cfg}"){tab3}else:# -- Config --'
                            print(command_cfg)
                        else:
                            str = "\ "
                            clear()
                            check_w = input('–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞? [Y/n]')
                            if check_w == 'y' or check_w == 'Y'  or check_w == 'Yes'   or check_w == 'yes' :
                                config_window_console = 'w'
                            else:
                                config_window_console = ''
                            openprogramm_cfg = input(f'–ü—É—Ç—å –∫ .py —Ñ–∞–π–ª—É\n (–ï—Å–ª–∏ –æ–Ω –≤ 1 –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å Alis –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫ –ø—Ä–∏–º–µ—Ä—É main.py)\n [{str}tath]')
                            command_cfg = f'{tab2}elif {s}{cfgcommand}{s} == command:{tab}{tab2}play_voise({s}{cfg_voise}{s}){tab}{tab2}os.system("start python{config_window_console} {openprogramm_cfg}"{tab3}else:# -- Config --'
                            print(command_cfg)
                        
                    
                    if m_check != 0:
                        with open ('main.py', 'r',  encoding='utf-8') as f:
                            old_data = f.read()
                        g = '# -- Config --'
                        new_data = old_data.replace(f'                else:{g}', command_cfg)
                        with open ('main.py', 'w',  encoding='utf-8') as f:
                            f.write(new_data) 
                        play_voise('–ß—Ç–æ–±—ã –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—Å—Ç—É–ø–∏–ª–∞ –≤ —Å–∏–ª—É, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–µ–Ω—è', '–ß—Ç–æ–±—ã –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—Å—Ç—É–ø–∏–ª–∞ –≤ —Å–∏–ª—É, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–µ–Ω—è')



                elif '–ø–æ–∏—Å–∫ google' == command:
                    play_voise('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –≤ –≥—É–≥–ª?', '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –≤ Google?')
                    voice_find = record_audio2()
                    os.remove("microphone-find.wav")
                    play_voise(f'–ü–æ–∏—Å–∫:{voice_find}', f'–ü–æ–∏—Å–∫:{voice_find}')
                    find = voice_find
                    
                    webbrowser.open(f'https://www.google.com/search?q={find}&source=hp&ei=XbXBYvnbB5P-sAf5obrAAg&iflsig=AJiK0e8AAAAAYsHDbdl9QtXo7QQ_VdhIZlSHC1TugnZL&ved=0ahUKEwi5_pCNhN34AhUTP-wKHfmQDigQ4dUDCAY&uact=5&oq=–∫–æ—Ç–∏–∫–∏&gs_lcp=Cgdnd3Mtd2l6EAMyCAgAEIAEELEDMgsIABCABBCxAxCDATIFCAAQgAQyCAguEIAEENQCMggILhCABBCxAzIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQyBQgAEIAEOggILhCxAxCDAToRCC4QgAQQsQMQgwEQxwEQowI6CwguEIAEELEDEIMBOgsILhCABBCxAxDUAjoFCC4QgAQ6CAgAELEDEIMBSgUIOxIBMVDHBVihDWCREGgAcAB4AIABgwGIAbsEkgEDNS4ymAEAoAEBsAEA&sclient=gws-wiz')
                
                
                
                elif 'google –∫–∞—Ä—Ç—ã' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –≥—É–≥–ª–∫–∞—Ä—Ç—ã')
                    
                    webbrowser.open('www.google.com/maps')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')
                
                
                
                elif 'virustotal' == command:
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –≤–∏—Ä—É—Å —Ç–æ—Ç–∞–ª', '–æ—Ç–∫—Ä—ã–≤–∞—é Virus Total')
                    
                    webbrowser.open('www.virustotal.com')
                    time.sleep(0.2)
                    play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')
                
                
                
                elif '–ø–æ–∏—Å–∫ –≤–∏–∫–∏–ø–µ–¥–∏—è' == command or '–ø–æ–∏—Å–∫ wikipedia' == command:
                    play_voise('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏', '–ß—Ç–æ –≤—ã —Ö–æ—Ç–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏?')
                    voice_find = record_audio2()
                    os.remove("microphone-find.wav")
                    play_voise(f'–ü–æ–∏—Å–∫:{voice_find}', f'–ü–æ–∏—Å–∫:{voice_find}')
                    find = voice_find
                    
                    webbrowser.open(f'https://ru.wikipedia.org/wiki/{find}')
                
                
                
                elif '–ø–æ–∏—Å–∫ stackoverflow' == command:
                    play_voise('–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –≤ –°—Ç–∞–∫–û–≤–µ—Ä–§–ª–æ—É?', '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –≤ Stackowerflow?')
                    voice_find = record_audio2()
                    os.remove("microphone-find.wav")
                    play_voise(f'–ü–æ–∏—Å–∫:{voice_find}', f'–ü–æ–∏—Å–∫:{voice_find}')
                    find = voice_find
                    
                    webbrowser.open(f'https://ru.stackoverflow.com/search?q={find}')
                
                
                
                elif '–æ—Ç–∫–ª—é—á–∏—Å—å' == command or '–æ—Ç–∫–ª—é—á–∏—Ç—å' == command:
                    play_voise('–û—Ç–∫–ª—é—á–∞—é—Å—å', '–ü–æ–∫–∞.\n\n     Alis –æ—Ç–∫–ª—é—á–µ–Ω–∞, –ù–∞–∂–º–∏—Ç–µ Enter')
                    exit = input('')
                    break



                elif '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ' == command:
                    play_voise('–ü—Ä–æ–≤–µ—Ä–∫–∞', '–ü—Ä–æ–≤–µ—Ä–∫–∞...')
                    start(1, 1)
                
                
                
                elif '—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏' == command or '—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º—è' == command:
                    from datetime import datetime
                    m = datetime.now()
                    play_voise(f'–°–µ–π—á–∞—Å {m.hour} {m.minute}'.replace('   ', ' ').replace('.', ' '), f'–°–µ–π—á–∞—Å {m.hour}:{m.minute}'.replace('   ', ' ').replace('.', ' '))
                
                
                
                elif '' == command:
                    empty += 1
                    if  empty == 5:
                        play_voise('–ù–µ –º–æ–ª—á–∏—Ç–µ', '–ù–µ –º–æ–ª—á–∏—Ç–µ :(')
                        empty = 0
                
                
                
                elif 'Alis' == command or '—ç–π' == command or '–≠–ª–∏—Å' == command:
                    play_voise('–î–ê?', '–î–∞? (:')
                
                
                
                elif '—É —Ç–µ–±—è –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü' == command or '–∫–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ –∫–æ—Ç–∞' == command:
                    if '—É —Ç–µ–±—è –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü' == command:
                        play_voise('–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫–æ—Ç –ë–æ–±. –ú—è—É', '–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫–æ—Ç –ë–æ–±. –ú—è—É (‚óî‚ó°‚óî)')
                    else:
                        play_voise('–ú–æ–µ–≥–æ –∫–æ—Ç–∞ –∑–æ–≤—É—Ç –ë–æ–±. –ú—è—É', '–ú–æ–µ–≥–æ –∫–æ—Ç–∞ –∑–æ–≤—É—Ç –ë–æ–±. –ú—è—É (‚óî‚ó°‚óî)')
                
                
                
                elif '–∫—Ç–æ —Ç—ã' == command or '—á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ' == command:
                    play_voise('–Ø Alis, —è –¥—Ä—É–≥ –æ–∫–µ–π –≥—É–≥–ª –∏ —Å–∏—Ä–∏, –∞ –º–æ–π –∑–∞–∫–ª—è—Ç—ã–π –≤—Ä–∞–≥ —è–Ω–¥—ç–∫—Å –∞–ª–∏—Å–∞', '–Ø Alis, —è –¥—Ä—É–≥ Ok-Google –∏ Siry, –∞ –º–æ–π –∑–∞–∫–ª—è—Ç—ã–π –≤—Ä–∞–≥ Yandex –ê–ª–∏—Å–∞')
                
                
                
                elif '–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª' == command or '–∫—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å' == command:
                    play_voise('–º–µ–Ω—è —Å–æ–∑–¥–∞–ª –∫—Ä—É—Ç–æ–π —á–µ–ª–æ–≤–µ–∫, —Å–∫–∞–∑–∞—Ç—å —á–µ—Å—Ç–Ω–æ, –ø–æ –Ω–∞—á–∞–ª—É —è –¥—É–º–∞–ª–∞ –æ–Ω –Ω–µ–¥–æ—É–º–æ–∫, –Ω–æ –æ–Ω –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É–ª –º–æ–∏ –æ–∂–∏–¥–∞–Ω–∏—è', '–º–µ–Ω—è —Å–æ–∑–¥–∞–ª –∫—Ä—É—Ç–æ–π —á–µ–ª–æ–≤–µ–∫, —Å–∫–∞–∑–∞—Ç—å —á–µ—Å—Ç–Ω–æ, –ø–æ –Ω–∞—á–∞–ª—É —è –¥—É–º–∞–ª–∞ –æ–Ω –Ω–µ–¥–æ—É–º–æ–∫, –Ω–æ –æ–Ω –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É–ª –º–æ–∏ –æ–∂–∏–¥–∞–Ω–∏—è :O')
                
                
                
                elif '–æ—á–∏—Å—Ç–∏—Ç—å' == command or '–æ—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å' == command:
                    os.system('cls')
                
                
                
                elif '–∏–∑ –∫–∞–∫–æ–π —Ç—ã —Å—Ç—Ä–∞–Ω—ã' == command or '–≥–¥–µ —Ç—ã —Ä–æ–¥–∏–ª–∞—Å—å' == command:
                    play_voise('–Ø –∏–∑ —É–∫—Ä–∞–∏–Ω—ã, —Å–ª–∞–≤–∞ —É–∫—Ä–∞–∏–Ω–µ', '–Ø –∏–∑ –£–∫—Ä–∞–∏–Ω—ã, –°–ª–∞–≤–∞ –£–∫—Ä–∞–∏–Ω–µ!')     

 

                elif '–ø–∞—Ä—Å–∏–Ω–≥ —Å—Å—ã–ª–æ–∫' == command or '–ø–æ–∏—Å–∫ —Å—Å—ã–ª–æ–∫' == command:
                    try:
                        from googlesearch import search
                    except ImportError:
                        print("No module named 'google' found")
                        play_voise('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞')
                        os.system('pip install google')
                        from googlesearch import search

                    play_voise('–ó–∞–ø—Ä–æ—Å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏–Ω –ø–∞—Ä—Å–∏–Ω–≥', '–ó–∞–ø—Ä–æ—Å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏–Ω –ø–∞—Ä—Å–∏–Ω–≥')
                    query = record_audio2()
                    query = ''.join(query)

                    for j in search(query, tld="co.in", num=10, stop=10, pause=2):
                        print(j)
                    play_voise('–í–æ—Ç —Å—Å—ã–ª–∫–∏', '–í–æ—Ç —Å—Å—ã–ª–∫–∏ :)')




                elif '–ø–æ–∏—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–∞' == command or '–ø–∞—Ä—Å–∏–Ω –∞–∫–∫–∞—É–Ω—Ç–∞' == command:
                    try:
                        from googlesearch import search
                    except ImportError:
                        print("No module named 'google' found")
                        play_voise('–ó–∞–ø—Ä–æ—Å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏–Ω –ø–∞—Ä—Å–∏–Ω–≥', '–ó–∞–ø—Ä–æ—Å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏–Ω –ø–∞—Ä—Å–∏–Ω–≥')
                        os.system('pip install google')
                        from googlesearch import search


                    query = input('–ê–∫–∞–∞—É–Ω—Ç –≤ —Ñ–æ—Ä–º–µ @account [?]')
                    if query[1] != '@':
                        query = '@' + query
                    for j in search(query, tld="co.in", num=21, stop=21, pause=2):
                        print(j)
                    play_voise('–í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤', '–í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤')


                elif '–æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ' == command or '–æ—Ç–∫–ª—é—á—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ' == command:
                    with open ('files/config.cfg', 'r', encoding='utf-8') as f:
                        g = f.read()
                        g = g.replace('autoupdate = 1', 'autoupdate = 0')
                    with open ('files/config.cfg', 'w',  encoding='utf-8') as f:
                        f.write(g)
                    play_voise('–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ', 'Auto Update Disabled ‚ùå')

                elif '–≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ' == command or '–≤–∫–ª—é—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ' == command:
                    with open ('files/config.cfg', 'r', encoding='utf-8') as f:
                        g = f.read()
                        g = g.replace('autoupdate = 0', 'autoupdate = 1')
                    with open ('files/config.cfg', 'w',  encoding='utf-8') as f:
                        f.write(g)
                    play_voise('–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ', 'Auto Update Enabled ‚úîÔ∏è')

                elif '—á—Ç–æ –Ω–æ–≤–æ–≥–æ' == command or '—á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏' == command or '—á—Ç–æ –¥–æ–±–∞–≤–ª–∏' == command:
                    print(f'========\n\nIP-info [–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∞–π–ø–∏]. - –¥–æ–±–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥\nAlis Browser [BETA]\n–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä\ngithub - –ø–æ–∑–≤–æ–ª—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å github\n–ë–∞–≥—Ñ–∏–∫—Å\n–£—Å–∫–æ—Ä–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º—É–∑—ã–∫–∏\nAFK mode - —Å–∫–∞–∂–∏—Ç–µ –∂–¥–∞—Ç—å\n–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ - –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø—É—â–µ–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º\n–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏\n–û–¥–Ω–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É\n========')




                elif '—Å–∫–∞—á–∞—Ç—å —á–∏—Ç—ã' == command or 'download cheats' == command:
                    webbrowser.open(f'https://sites.google.com/view/cheats-pro/')

                elif '—Ç–µ—Å—Ç –æ—à–∏–±–∫–∏' == command and admin_preset == 1:
                    print(Not_peremen_found)

                elif '—Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ youtube' == command or '—Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —é—Ç—É–±' == command or '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ youtube' == command:
                    urlgeat = input('Youtube URL: ')
                    play_voise('–ò–¥—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –¥–ª—è –≤–∞—Å, –æ–∂–∏–¥–∞–π—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ—Ç —Ç—Ä—ë—Ö –¥–æ –ø—è—Ç–∏ –º–∏–Ω—É—Ç', '–ò–¥—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –¥–ª—è –≤–∞—Å, –æ–∂–∏–¥–∞–π—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 3-5 –º–∏–Ω—É—Ç')
                    list_urls = [urlgeat]

                    for url in list_urls:
                    
                        try:
                            yt_obj = YouTube(url)

                            yt_obj.streams.get_highest_resolution().download('downloads/')
                        except Exception as e:
                            print(e)
                            raise Exception('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.')
                        print('–í–∏–¥–µ–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.')
                

                elif '—Å–∫–∞—á–∞—Ç—å –∑–≤—É–∫ –∏–∑ –≤–∏–¥–µ–æ youtube' == command or '—Å–∫–∞—á–∞—Ç—å –º—É–∑—ã–∫—É –∏–∑ –≤–∏–¥–µ–æ youtube' == command or '—Å–∫–∞—á–∞—Ç—å –º—É–∑—ã–∫—É –∏–∑ youtube' == command or '—Å–∫–∞—á–∞—Ç—å –º—É–∑—ã–∫—É' == command or '—Å–∫–∞—á–∞—Ç—å –ø–µ—Å–Ω—é' == command or '—Å–∫–∞—á–∞—Ç—å –ø–µ—Å–Ω—é —é—Ç—É–±' == command or '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Å–Ω—é —é—Ç—É–±' == command:
                    play_voise('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –≤ –∫–æ–Ω—Å–æ–ª—å','–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –≤ –∫–æ–Ω—Å–æ–ª—å </...>')
                    zapros = input('–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ url:')
                    from youtubesearchpython import VideosSearch
                    channelsSearch = VideosSearch(zapros, limit = 1)
                    if 'https' in zapros:
                        link = zapros
                    else:
                        link = channelsSearch.result(1)['result'][-1]['link']
                    

                    def run():
                        video_url = link 
                        play_voise('–ò–¥—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–∫–∞ –¥–ª—è –≤–∞—Å, –æ–∂–∏–¥–∞–π—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ—Ç —Ç—Ä—ë—Ö –¥–æ –ø—è—Ç–∏ –º–∏–Ω—É—Ç', '–ò–¥—ë—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–∫–∞ –¥–ª—è –≤–∞—Å, –æ–∂–∏–¥–∞–π—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 3-5 –º–∏–Ω—É—Ç')
                        video_info = youtube_dl.YoutubeDL().extract_info(
                            url = video_url,download=False
                        )
                        filename = f"downloads/{video_info['title']}.mp3"
                        options={
                            'format':'bestaudio/best',
                            'keepvideo':False,
                            'outtmpl':filename,
                        }

                        with youtube_dl.YoutubeDL(options) as ydl:
                            ydl.download([video_info['webpage_url']])

                        massga = "\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:{}".format(filename)+'\n\n'
                        print(massga)
                        plyer.notification.notify(message=massga,  app_name='Alis',  title='Mp3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

                    if __name__=='__main__':
                        try:
                            run()
                        except:
                            print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞')
                    
                elif '—Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∑–ª–æ–º' == command or '—Å–∏–º—É–ª—è—Ç–æ—Ä —Ö–∞–∫–µ—Ä–∞' == command or '—Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∑–ª–æ–º' == command:
                    try:
                        from colorama import init
                    except:
                        print('–¢—É—Ç –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂—Ç–∞—Ç—å, —Ç–∞–∫–æ–µ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑')
                        os.system('pip install colorama')
                        from colorama import init
                    x = 0
                    g = 0
                    init()
                    while 1:
                        x = x +1
                        lisT = [f'Hack {x}', f'0x3{x}3{x}{random.randint(0,9)}', f'Setting: Antihack.set({x})\n\nSign Inducle Error', 'connecting to anonymous FTP', 'Getting Server Data', 'Error = Traceback :: Most call in server', 'IP adress server unkown', f'x4x{x}x4{x}', f'server OFFESTS 0x03{x}{x+1}', 'Hacking Password {', 'Server atack{']#—Å—á—ë—Ç –≤ —Å–ø–∏—Å–∫–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
                        m = x
                        list_get = random.randint(0,10)
                        str = lisT[list_get]
                        print(Fore.GREEN + str)
                        if list_get == 3:
                            time.sleep(0.5)
                            g = 1
                        elif list_get == 10:
                            txt = F'Connect: OK\nAnonimes FTTP: OK\nHack mode: OK\n'
                            for i in txt:  # —ç—Ç–æ—Ç —Ü–∏–∫–ª –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –ø–æ 1 –±—É–∫–æ–≤–∫–µ –∏–∑ —Ç—Ö—Ç
                                time.sleep(0.01)
                                print(i, end= '', flush=True)
                            animation(10)
                            for _ in range(100):
                                txt = f'{random.randint(0,1)}{random.randint(0,1)}{random.randint(0,1)}{random.randint(0,1)}\n'
                                for i in txt:  # —ç—Ç–æ—Ç —Ü–∏–∫–ª –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –ø–æ 1 –±—É–∫–æ–≤–∫–µ –∏–∑ —Ç—Ö—Ç
                                    time.sleep(0.001)
                                    print(i, end= '', flush=True)
                            print('}')
                        elif list_get == 9:
                            passw = f'{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}\n' + '}\n'
                            txt = passw
                            for i in txt:  # —ç—Ç–æ—Ç —Ü–∏–∫–ª –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –ø–æ 1 –±—É–∫–æ–≤–∫–µ –∏–∑ —Ç—Ö—Ç
                                time.sleep(0.05)
                                print(i, end= '', flush=True)
                        time.sleep(0.03)
                        if m == 120:
                            
                            command = input('$-- command == ')
                            txt = F'{command} -- –ö–æ–º–∞–Ω–¥–∞ –≤—Å—Ç—É–ø–∏–ª–∞ –≤ —Å–∏–ª—É'
                            for i in txt:  # —ç—Ç–æ—Ç —Ü–∏–∫–ª –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –ø–æ 1 –±—É–∫–æ–≤–∫–µ –∏–∑ —Ç—Ö—Ç
                                time.sleep(0.05)
                                print(i, end= '', flush=True)
                            if command == 'exit':
                                print('--------\n–û—Ç–∫–ª—é—á–µ–Ω–∏–µ\n--------')
                                break
                            m = m - 120
                

                
                elif '—Å–æ–∑–¥–∞—Ç—å –ø–∞—Ä–æ–ª—å' == command:
                    play_voise('–≤—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø–∞—Ä–æ–ª—è', '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø–∞—Ä–æ–ª—è')
                    clear()
                    try:
                        inp = input('1 = —á–∏—Å–ª–æ–≤–æ–π –ø–∞—Ä–æ–ª—å\n2 = –ø–∞—Ä–æ–ª—å —Å —Å–∏–º–≤–æ–ª–∞–º–∏\n3 = –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å\n–í–∞—à –≤—ã–±–æ—Ä: ')
                        if int(inp) == 1:
                            g = f'{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}{random.randint(0,9)}'
                            print('–í–∞—à –ø–∞—Ä–æ–ª—å "' + g + '" —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞')
                            pyperclip.copy(g)
                            play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')
                            try:
                                with open ('files/35sfd.txt', 'r', encoding='utf-8') as f:
                                    h = f.read()
                                    passwords = f'{h}\n{g}'
                                    f.close()
                            except:
                                passwords = g
                            with open('files/35sfd.txt', 'w+', encoding='utf-8') as f:
                                f.write(passwords)
                                f.close()
                        elif int(inp) == 2:
                            listABC = ['A','B','C ','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z', 'a','b','c ','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
                            g = f'{listABC[random.randint(0,21)]}{listABC[random.randint(0,51)]}{random.randint(0,9)}{random.randint(0,9)}{listABC[random.randint(0,51)]}{listABC[random.randint(0,51)]}{random.randint(0,9)}{random.randint(0,9)}'
                            print('–í–∞—à –ø–∞—Ä–æ–ª—å "' + g + '" —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞')
                            pyperclip.copy(g)
                            play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')
                            try:
                                with open ('files/35sfd.txt', 'r', encoding='utf-8') as f:
                                    h = f.read()
                                    passwords = f'{h}\n{g}'
                                    f.close()
                            except:
                                passwords = g
                            with open('files/35sfd.txt', 'w+', encoding='utf-8') as f:
                                f.write(passwords)
                                f.close()
                        elif int(inp) == 3:
                            listABC = ['ÂÆâ', 'È´ò', 'Á†¥', 'ÁöÆ', 'ËÑë', 'ÊØî', 'Ê≥¢', 'ÊïÖ', 'Âπ≤', 'Êãø', 'ÁØÆ', 'Âìà', 'ËÄÉ', 'ÂåÖ', 'Ë∑ë', 'Âì≠', 'Âçó', 'Ë∑Ø', 'Âäû', '„É¥', '„Éß']
                            g = f'{listABC[random.randint(0,21)]}{listABC[random.randint(0,21)]}{random.randint(0,9)}{random.randint(0,9)}{listABC[random.randint(0,21)]}{listABC[random.randint(0,21)]}{random.randint(0,9)}{random.randint(0,9)}{listABC[random.randint(0,21)]}{listABC[random.randint(0,21)]}{random.randint(0,9)}{random.randint(0,9)}{listABC[random.randint(0,21)]}{listABC[random.randint(0,21)]}{random.randint(0,9)}{random.randint(0,9)}'
                            print('–í–∞—à –ø–∞—Ä–æ–ª—å "' + g + '" —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞')
                            pyperclip.copy(g)
                            play_voise('–ì–æ—Ç–æ–≤–æ', '–ì–æ—Ç–æ–≤–æ!')
                            try:
                                with open ('files/35sfd.txt', 'r', encoding='utf-8') as f:
                                    h = f.read()
                                    passwords = f'{h}\n{g}'
                                    f.close()
                            except:
                                passwords = g
                            with open('files/35sfd.txt', 'w+', encoding='utf-8') as f:
                                f.write(passwords)
                                f.close()
                    except:
                        print('–ë—É–∫–≤—ã —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ!')


                elif '–º–æ–∏ –ø–∞—Ä–æ–ª–∏' == command or '—Å–ø–∏—Å–æ–∫ –ø–∞—Ä–æ–ª–µ–π' == command:
                    with open ('files/35sfd.txt', 'r', encoding='utf-8') as f:
                        h = f.read()
                        preview_text = Figlet(font='slant')
                        print(preview_text.renderText('Alis [Pass]'))
                        print('===============\n–í–∞—à–∏ –ø–∞—Ä–æ–ª–∏\n' + h + '\n===============')
                        f.close()

                elif '–¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å' == command or '–¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å –≤ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–æ–ª–µ–π' == command:
                    g = input('–í–∞—à –ø–∞—Ä–æ–ª—å: ')
                    try:
                        with open ('files/35sfd.txt', 'r', encoding='utf-8') as f:
                            h = f.read()
                            passwords = f'{h}\n{g}'
                            f.close()
                    except:
                        passwords = g
                    with open('files/35sfd.txt', 'w+', encoding='utf-8') as f:
                        f.write(passwords)
                        f.close()
                elif '—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É' in command or '—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –Ω–∞ —Ä–æ–±–æ—á–µ–º —Å—Ç–æ–ª–µ' in command:
                    homeDir = os.path.expanduser("~/Onedrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/")
                    if '—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É' in command:
                        g = command.replace('—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –Ω–∞ —Ä–æ–±–æ—á–µ–º —Å—Ç–æ–ª–µ ', '')
                        g = command.replace('—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –Ω–∞ —Ä–æ–±–æ—á–µ–º —Å—Ç–æ–ª–µ', '')
                        g = command.replace('—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É ', '')
                        g = g.replace('—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É', '')
                        homeDir = '"' + homeDir + g + '"'
                        os.system(f'mkdir {homeDir}')
                        play_voise('–û–±–Ω–æ–≤–∏—Ç–µ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–ª–∞–≤–∏—à–∏ –≠—Ñ5','–û–±–Ω–æ–≤–∏—Ç–µ –†–∞–±–æ—á–∏–π —Å—Ç–æ–ª –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–ª–∞–≤–∏—à–∏ F5\n–ò–ª–∏ –ù–∞–∂–∞–≤ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –ü–ö–ú > –û–±–Ω–æ–≤–∏—Ç—å')

                elif '—á–∏—Å—Ç—ã–π –ª–∏—Å—Ç' == command or '–ø—Ä–æ—Ç–æ–∫–æ–ª —á–∏—Å—Ç—ã–π –ª–∏—Å—Ç' == command or '—Å–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç' == command or '—Å–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª' == command:
                    play_voise('—Å–æ–∑–¥–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª', f'–°–æ–∑–¥–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª {filename}.txt')
                    name = record_audio3()
                    filename = name.join('_')
                    play_voise('—Å–æ–∑–¥–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª', f'–°–æ–∑–¥–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª {filename}.txt')
                    homeDir = os.path.expanduser("~/Onedrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/")
                    with open (f'{homeDir}{filename}.txt', 'w+', encoding='utf-8') as f:
                        f.write('')
                        f.close()
                    play_voise('–û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–ª–∞–≤–∏—à–∏ –≠—Ñ5 –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ','–û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–ª–∞–≤–∏—à–∏ F5 –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ\n–ò–ª–∏ –ù–∞–∂–∞–≤ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –ü–ö–ú > –û–±–Ω–æ–≤–∏—Ç—å')
                
                elif '–¥–∂–∞—Ä–≤–∏—Å' == command:
                    play_voise('–Ø –Ω–µ –¥–∂–∞—Ä–≤–∏—Å', f'–Ø –Ω–µ J.A.R.V.I.S  > . <')

                elif 'siry' == command:
                    play_voise("–Ø –Ω–µ Siry", f"–Ø –Ω–µ Siry  :'<")

                elif 'ok google' == command:
                    play_voise('–Ø –Ω–µ OK Google', f'–Ø –Ω–µ OK Google  > o <')

                elif 'OK Google' == command:
                    play_voise('–Ø –Ω–µ OK Google', f'–Ø –Ω–µ OK Google  > o <')


                elif '—Ä–æ—Å–∏—è —Ç–æ–ø' == command or '—Å–ª–∞–≤–∞ —Ä–æ—Å–∏–∏' == command:
                    play_voise('–Ø –æ–±–∏–¥–µ–ª–∞—Å—å', '–Ø –æ–±–∏–¥–µ–ª–∞—Å—å >:(')

                    sys.exit(1)

                elif '—Å–ª–∞–≤–∞ —É–∫—Ä–∞–∏–Ω–µ' == command:
                    play_voise('–ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞', '–ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞! :)')


                elif '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ip' == command:
                    
                    def get_info_by_ip(ip=''):
                        try:
                            if ip == '':
                                print('[Info] –í–∞—à ip')
                                response = requests.get(url=f'http://ip-api.com/json/').json()
                                ip = response.get('query')

                            else:
                                response = requests.get(url=f'http://ip-api.com/json/{ip}').json()
                            data = {
                                f'[‚öù IP]': response.get('query'),
                                f'[Int prov]': response.get('isp'),
                                f'[Org]': response.get('org'),
                                f'[Country]': response.get('country'),
                                f'[Region Name]': response.get('regionName'),
                                f'[City]': response.get('city'),
                                f'[ZIP]': response.get('zip'),
                                f'[Lat]': response.get('lat'),
                                f'[Lon]': response.get('lon'),    
                            }

                            for k, v in data.items():
                                
                                info = f'{k} : {v}' + '\n';txt = info
                                for i in txt:   time.sleep(0.001);print(i, end= '', flush=True)

                            if chck_path('ip_info') == False:
                                g = abspath(__file__)
                                name = os.path.basename(g)
                                g = g.replace(name, '')
                                command = f'New-Item -Path "{g}/ip_info" -ItemType Directory'
                                proc = subprocess.Popen(['powershell', command])
                                proc.wait()
                            if checkfile(f"ip_info/ip-{ip.replace('.', '-')}.txt") == False:
                            
                                with open(f"ip_info/ip-{ip.replace('.', '-')}.txt", 'w+', encoding='utf-8') as f:
                                    inform = []
                                    for k, v in data.items():
                                
                                        info = f'{k} : {v}' + '\n';txt = info
                                        inform.append(txt)
                                    txt = ' '.join(inform)
                                        
                                    f.write(f'A l i s   i p   : \n{ip}\n\n{txt}')
                                    f.close()
                                    filename = ip.replace('.', '-')
                                    print(f'[{Fore.GREEN} ‚úì {Fore.WHITE}] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Ip - –∞–¥—Ä–µ—Å–µ. –±—ã–ª–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —Ñ–∞–π–ª ip-{filename}.txt [{Fore.GREEN} ‚úì {Fore.WHITE}]')


                            area = folium.Map(location=[response.get('lat'), response.get('lon')]);area.save(f'{response.get("query")}_{response.get("city")}.html');print('\n\n')


                        except requests.exceptions.ConnectionError:    print('[!] –û—à–∏–±–∫–∞. –í–∫–ª—é—á–∏—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç [!]')


                    def main():    preview_text = Figlet(font='slant');print(preview_text.renderText('Alis Ip  </>'));ip = input('–í–≤–µ–¥–∏—Ç–µ IP: ');get_info_by_ip(ip=ip)


                    if __name__ == '__main__':
                        main()
                
                elif '–æ—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä' == command or '—ç–ª–∏—Å –±—Ä–∞—É–∑–µ—Ä' == command or '–∏–ª–∏ –±—Ä–∞—É–∑–µ—Ä' == command:
                    if checkfile('files/browser.py') == True:
                        play_voise('–ó–∞–ø—É—Å–∫–∞—é –º—ã—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä –≠–ª–∏—Å', '–ó–∞–ø—É—Å–∫–∞—é –º—ã—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä Alis')
                        os.system("start pythonw files/browser.py")
                    else:
                        with open('files/browser.py', 'w+', encoding='utf-8') as f:
                            file = "import sys#perenosimport os#perenostry:#perenos    from PyQt5.QtCore import *#perenos    from PyQt5.QtWidgets import *#perenos    from PyQt5.QtWebEngineWidgets import *#perenosexcept:#perenos    os.system('pip install pyqt5')#perenos    os.system('pip install PyQtWebEngine')#perenos    input('–ü–µ—Ä–∞–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É')#perenos    sys.exit(1)#perenos#perenosclass MainWindow(QMainWindow):#perenos    def __init__(self):#perenos        super(MainWindow, self).__init__()#perenos        self.browser = QWebEngineView()#perenos        self.browser.setUrl(QUrl('http://google.com'))#perenos        self.setCentralWidget(self.browser)#perenos        self.showMaximized()#perenos        #perenos#perenos        # navbar#perenos        navbar = QToolBar()#perenos        self.addToolBar(navbar)#perenos        navbar.setAutoFillBackground(True)#perenos        navbar.setStyleSheet('QToolBar { background: yellow; }')#perenos#perenos        back_btn = QAction('Back', self)#perenos        back_btn.triggered.connect(self.browser.back)#perenos        navbar.addAction(back_btn)#perenos#perenos        forward_btn = QAction('Forward', self)#perenos        forward_btn.triggered.connect(self.browser.forward)#perenos        navbar.addAction(forward_btn)#perenos#perenos        reload_btn = QAction('Reload', self)#perenos        reload_btn.triggered.connect(self.browser.reload)#perenos        navbar.addAction(reload_btn)#perenos#perenos        home_btn = QAction('Home', self)#perenos        home_btn.triggered.connect(self.navigate_home)#perenos        navbar.addAction(home_btn)#perenos#perenos        Alis_btn = QAction('Alis', self)#perenos        Alis_btn.triggered.connect(self.Alis)#perenos        navbar.addAction(Alis_btn)#perenos        #perenos#perenos        self.url_bar = QLineEdit()#perenos        self.url_bar.returnPressed.connect(self.navigate_to_url)#perenos        navbar.addWidget(self.url_bar)#perenos#perenos        self.browser.urlChanged.connect(self.update_url)#perenos#perenos    def spotify(self):#perenos        self.browser.setUrl(QUrl('https://open.spotify.com'))#perenos#perenos    def Alis(self):#perenos        self.browser.setUrl(QUrl('https://sites.google.com/view/coderprogrammers'))#perenos#perenos    def navigate_home(self):#perenos        self.browser.setUrl(QUrl('http://google.com'))#perenos    #perenos    def navigate_to_url(self):#perenos        url = self.url_bar.text()#perenos        self.browser.setUrl(QUrl(url))#perenos#perenos    def update_url(self, q):#perenos        self.url_bar.setText(q.toString())#perenos#perenos#perenosapp = QApplication(sys.argv)#perenosQApplication.setApplicationName('Alis browser')#perenoswindow = MainWindow()#perenosapp.exec_()"
                            file = file.replace('#perenos', '\n')
                            f.write(file)
                            f.close()
                    play_voise('–û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä', '–û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä')
                    print('Program: This is BETA FUNCTION\n–ú–æ–≥—É—Ç –±—ã—Ç—å –æ—à–∏–±–∫–∏.')
                    os.system("start pythonw files/browser.py")


                elif command == '–æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à':
                    play_voise("–û—á–∏—â–∞—é –∫—ç—à", '–û—á–∏—â–∞—é –∫—ç—à')
                    
                    
                    import os, shutil
                    folder = os.path.expanduser("~/AppData/Local/Temp")
                    for filename in os.listdir(folder):
                        file_path = os.path.join(folder, filename)
                        try:
                            if os.path.isfile(file_path) or os.path.islink(file_path):
                                os.unlink(file_path)
                            elif os.path.isdir(file_path):
                                shutil.rmtree(file_path)
                        except Exception as e:
                            print('Failed to delete %s. Reason: %s' % (file_path, e))
                    play_voise('–∫—ç—à –æ—á–∏—â–µ–Ω', 'Cache –æ—á–∏—â–µ–Ω')     
                
                elif command == '—Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤':
                    play_voise('–ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤', '–ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤')
                    os.system("start python files/getprocess.py")

                elif '–≥–∏—Ç—Ö–∞–±' == command:
                    if chck_path('github') == False:
                        play_voise('–°–æ–∑–¥–∞—é –ø–∞–ø–∫—É', '–°–æ–∑–¥–∞—é –ø–∞–ø–∫—É')
                        g = abspath(__file__)
                        name = os.path.basename(g)
                        g = g.replace(name, '')
                        command = f'New-Item -Path "{g}/github" -ItemType Directory'
                        

                        proc = subprocess.Popen(['powershell', command])
                        proc.wait()
                        clear()
                        
                        print(f'[{Fore.GREEN} ‚úì {Fore.WHITE} ]–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ {Fore.CYAN}github [{Fore.GREEN} ‚úì {Fore.WHITE}]\n–í –Ω–µ–π –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤—Å–µ –≤–∞—à–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—ç–∫—Ç—ã github')
                        play_voise('–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞', '–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞')
                        time.sleep(3)
                    else:
                        pass
                    g = abspath(__file__)
                    name = os.path.basename(g)
                    m = input('Name : ')
                    g = g.replace(name, f'github/{m}')
                    URL_git = input('URL : ')
                    try:
                        from git.repo.base import Repo
                    except:
                        play_voise('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–∏—Ç —Ö–∞–±', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–∏—Ç —Ö–∞–±')
                        os.system('pip install gitpython --quiet --disable-pip-version-check')
                        play_voise('–ú–æ–¥—É–ª—å –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω','–ú–æ–¥—É–ª—å –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
                        from git.repo.base import Repo

                    
                    Repo.clone_from(URL_git, g)
                    print(f'[{Fore.GREEN} ‚úì {Fore.WHITE}]–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —É—Ç—Å–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–∞–ø–∫—É github[{Fore.GREEN} ‚úì {Fore.WHITE}]')
                    play_voise('–ì–æ—Ç–æ–≤–æ', f'[{Fore.GREEN} ‚úì {Fore.WHITE} ] –ì–æ—Ç–æ–≤–æ [{Fore.GREEN} ‚úì {Fore.WHITE} ]')
                    
                elif command == '–º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä':
                    if checkfile('files/musicplayer.py') == True:
                        play_voise('–ó–∞–ø—É—Å–∫–∞—é –º—ã—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä –≠–ª–∏—Å', '–ó–∞–ø—É—Å–∫–∞—é –º—ã—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä Alis')
                        os.system("start pythonw files/musicplayer.py")
                    else:
                        with open('files/musicplayer.py', 'w+', encoding='utf-8') as f:
                            file = "from tkinter import *#perenosfrom tkinter import filedialog#perenosfiledialog#perenosfrom pygame import mixer#perenos#perenos       #perenosclass Grip:#perenos    def __init__(self, parent, disable=None, releasecmd=None) :#perenos        super().__init__()    #perenos    #perenos        self.parent = parent#perenos        self.root = parent.winfo_toplevel()#perenos#perenos        self.disable = disable#perenos        if type(disable) == 'str':#perenos            self.disable = disable.lower()#perenos#perenos        self.releaseCMD = releasecmd#perenos#perenos        self.parent.bind('<Button-1>', self.relative_position)#perenos        self.parent.bind('<ButtonRelease-1>', self.drag_unbind)#perenos#perenos    def relative_position (self, event) :#perenos        cx, cy = self.parent.winfo_pointerxy()#perenos        geo = self.root.geometry().split('+')#perenos        self.oriX, self.oriY = int(geo[1]), int(geo[2])#perenos        self.relX = cx - self.oriX#perenos        self.relY = cy - self.oriY#perenos#perenos        self.parent.bind('<Motion>', self.drag_wid)#perenos#perenos    def drag_wid (self, event) :#perenos        cx, cy = self.parent.winfo_pointerxy()#perenos        d = self.disable#perenos        x = cx - self.relX#perenos        y = cy - self.relY#perenos        if d == 'x' :#perenos            x = self.oriX#perenos        elif d == 'y' :#perenos            y = self.oriY#perenos        self.root.geometry('+%i+%i' % (x, y))#perenos#perenos    def drag_unbind (self, event) :#perenos        self.parent.unbind('<Motion>')#perenos        if self.releaseCMD != None :#perenos            self.releaseCMD()        #perenos#perenos#perenosclass MainFrame(Frame):#perenos    def __init__(self, parent):#perenos        super(MainFrame, self).__init__(parent)#perenos        #perenos#perenos        text = 'Pause'#perenos#perenos        Load = Button(self,             relief='flat', text = 'Load',             bg = 'black', fg = 'white',             width = 10, font = ('Comic', 10),             command = self.load)#perenos        Play = Button(self,             relief='flat', text = 'Play',             bg = 'black', fg = 'white',             width = 10,font = ('Comic', 10),             command = self.play)#perenos        Pause = Button(self,             relief='flat', text = text,             bg = 'black', fg = 'white',             width = 10, font = ('Comic', 10),             command = self.pause)#perenos        Stop = Button(self,             relief='flat', text = 'Stop',             bg = 'black', fg = 'white',             width = 10, font = ('Comic', 10),             command = self.stop)#perenos   #perenos        Load.place(x=0, y=20);#perenos        Play.place(x=110, y=20);#perenos        Pause.place(x=220, y=20);#perenos        Stop.place(x=110, y=60);#perenos        #perenos        self.music_file = False#perenos        self.playing_state = False#perenos        #perenos    def load(self):#perenos        self.music_file = filedialog.askopenfilename()#perenos        #perenos    def play(self):#perenos        if self.music_file:#perenos            mixer.init()#perenos            mixer.music.load(self.music_file)#perenos            mixer.music.play()#perenos            #perenos    def pause(self):#perenos        if not self.playing_state:#perenos            mixer.music.pause()#perenos            self.playing_state=True#perenos            self.text = 'Play'#perenos        else:#perenos            mixer.music.unpause()#perenos            self.playing_state = False#perenos            #perenos    def stop(self):#perenos        mixer.music.stop()#perenos#perenos#perenosdef exit():#perenos    root.destroy()        #perenos        #perenosroot = Tk()#perenosroot.geometry('330x120')#perenosroot.resizable(0, 0)#perenosroot.overrideredirect(1)#perenosroot.wm_attributes('-topmost', True)#perenosroot.wm_attributes('-alpha',0.8)#perenosroot['bg'] = 'black'#perenos#perenosmainFrame = MainFrame(root)#perenosmainFrame.pack_propagate(0)#perenosmainFrame.pack(fill=BOTH, expand=1)#perenosmainFrame['bg'] = 'black'#perenos#perenosbottomFrame = Frame(mainFrame, bg='#050505')#perenosbottomFrame.place(x=0, y=100, anchor='nw', width=330, height=20)#perenos#perenosgrip = Grip(bottomFrame)#perenos#perenostitle = Label(#perenos    bottomFrame,     text='Alis',     bg='black',     fg='white'#perenos)#perenostitle.place(x=0, y=0)#perenos#perenosexit_btn = Button(#perenos    bottomFrame,     text='√ó',     relief='flat',#perenos    bg='black',     fg='white',     width=1,#perenos    font=('Times', 20),#perenos    command=lambda: exit()#perenos)#perenosexit_btn.place(x=310, y=0, anchor='nw', width=20, height=20)#perenos#perenosroot.mainloop()"
                            file = file.replace('#perenos', '\n')
                            f.write(file)
                            f.close()
                    play_voise('–ó–∞–ø—É—Å–∫–∞—é –º—ã—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä –≠–ª–∏—Å', '–ó–∞–ø—É—Å–∫–∞—é –º—ã—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä Alis')
                    os.system("start pythonw files/musicplayer.py")

                elif '–∂–¥–∞—Ç—å' == command:
                    play_voise('–ü–µ—Ä–µ—Ö–æ–¥ –≤ –ê —Ñ—ç –∫–∞ –º–æ–¥', '–ü–µ—Ä–µ—Ö–æ–¥ –≤ AFK mode')
                    input('–û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è Enter : ')
                    


                else:# -- Config --
                    play_voise('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é', '–ü—Ä–æ—Å—Ç–∏—Ç–µ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é :(')
                


                
                
import traceback
try:
    try:
        with open ('files/config.cfg', 'r', encoding='utf-8') as f:
            g = f.read()
            if 'autoupdate = 1' in g:
                h = 1
            else:
                h = 0
            if 'admin_preset = 1' in g:
                admin_preset = 1
            else:
                admin_preset = 0
        # 1 - —Ä–∞–±–æ—Ç–∞ —Ü–∏–∫–ª–∞, 2 - –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, 3 - –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    except:
        standart_cfg = 'autoupdate = 1\nadmin_preset = 0'
        my_file = open("files/config.cfg", "w+")
        my_file.write(standart_cfg)
        my_file.close()
        h = 1
    start(parametr, h, admin_preset, 0)
except requests.exceptions.ConnectionError:
    print('[!] –û—à–∏–±–∫–∞. –í–∫–ª—é—á–∏—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç [!]')
except Exception as e:
    print('[‚ö† ] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –û–Ω–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –≤–∞—à –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π —Å –æ—à–∏–±–∫–æ–π –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç. [‚ö† ]\n===========\nhttps://drive.google.com/file/d/1K-1QOGH_fiz-yWkuTf9jvILQXmXviA7B/view?usp=sharing \n===========\n{\n\n', traceback.format_exc() + '\n}')
    pyperclip.copy(traceback.format_exc())
    input('–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –∫–æ–Ω—Å–æ–ª—å')
    if admin_preset != 1:
        update(1)
    else:
        print('===============================================')